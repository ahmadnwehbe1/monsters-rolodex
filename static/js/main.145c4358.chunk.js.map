{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["CardComponent","props","Card","className","style","backgroundColor","Content","Image","alt","src","monster","id","name","email","CardList","Container","Group","itemsPerRow","monsters","map","i","SearchBox","placeholder","handleChange","Input","marginBottom","marginTop","icon","onChange","App","e","setState","searchField","target","value","state","fetch","method","then","response","json","users","this","filteredMonsters","filter","m","toLowerCase","includes","fontFamily","fontSize","color","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAIaA,G,MAAgB,SAACC,GAAD,OAC3B,cAACC,EAAA,EAAD,CAAMC,UAAU,YAAYC,MAAO,CAAEC,gBAAiB,WAAtD,SACE,eAACH,EAAA,EAAKI,QAAN,WACE,cAACC,EAAA,EAAD,CACEC,IAAI,UACJC,IAAK,wBAA0BR,EAAMS,QAAQC,GAAK,cAGpD,6BAAKV,EAAMS,QAAQE,OACnB,4BAAIX,EAAMS,QAAQG,eCTXC,EAAW,SAACb,GACvB,OACE,cAACc,EAAA,EAAD,UACE,cAACb,EAAA,EAAKc,MAAN,CAAYC,YAAa,EAAzB,SACGhB,EAAMiB,SAASC,KAAI,SAACT,EAASU,GAAV,OAClB,cAAC,EAAD,CAAuBV,QAASA,GAAZU,W,kBCGfC,EATG,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OAChB,cAACC,EAAA,EAAD,CACEpB,MAAO,CAAEqB,aAAc,OAAQC,UAAW,QAC1CC,KAAK,SACLL,YAAaA,EACbM,SAAUL,KCgDCM,E,kDAjDb,aAAe,IAAD,8BACZ,gBAaFN,aAAe,SAACO,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXjB,SAAU,GACVc,YAAa,IAJH,E,gEAOO,IAAD,OAClBI,MAAM,6CAA8C,CAClDC,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKV,SAAS,CAAEb,SAAUuB,S,+BAMrC,IAAD,EAC2BC,KAAKP,MAA/BjB,EADD,EACCA,SAAUc,EADX,EACWA,YAEZW,EAAmBzB,EAAS0B,QAChC,SAACC,GAAD,OACEA,EAAEjC,KAAKkC,cAAcC,SAASf,EAAYc,gBAC1CD,EAAEhC,MAAMiC,cAAcC,SAASf,EAAYc,kBAG/C,OACE,sBAAK3C,UAAU,MAAf,UACE,oBACEC,MAAO,CACL4C,WAAY,gBACZC,SAAU,OACVC,MAAO,UACPxB,UAAW,QALf,0BAUA,cAAC,EAAD,CACEJ,YAAY,qBACZC,aAAcmB,KAAKnB,eAErB,cAAC,EAAD,CAAUL,SAAUyB,W,GA5CVQ,aCMHC,G,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.145c4358.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardContent, Image } from \"semantic-ui-react\";\r\nimport \"./card.style.css\";\r\n\r\nexport const CardComponent = (props) => (\r\n  <Card className=\"cardStyle\" style={{ backgroundColor: \"#89D3D3\" }}>\r\n    <Card.Content>\r\n      <Image\r\n        alt=\"monster\"\r\n        src={\"https://robohash.org/\" + props.monster.id + \"?set=set2\"}\r\n      />\r\n\r\n      <h3>{props.monster.name}</h3>\r\n      <p>{props.monster.email}</p>\r\n    </Card.Content>\r\n  </Card>\r\n);\r\n","import React from \"react\";\r\nimport { Card, Container } from \"semantic-ui-react\";\r\nimport { CardComponent } from \"../card/card.component\";\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <Container>\r\n      <Card.Group itemsPerRow={4}>\r\n        {props.monsters.map((monster, i) => (\r\n          <CardComponent key={i} monster={monster} />\r\n        ))}\r\n      </Card.Group>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Input } from \"semantic-ui-react\";\r\n\r\nconst SearchBox = ({ placeholder, handleChange }) => (\r\n  <Input\r\n    style={{ marginBottom: \"30px\", marginTop: \"10px\" }}\r\n    icon=\"search\"\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n  />\r\n);\r\n\r\nexport default SearchBox;\r\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport SearchBox from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\", {\n      method: \"GET\",\n    })\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n\n    const filteredMonsters = monsters.filter(\n      (m) =>\n        m.name.toLowerCase().includes(searchField.toLowerCase()) ||\n        m.email.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1\n          style={{\n            fontFamily: \"Bigelow Rules\",\n            fontSize: \"72px\",\n            color: \"#0CCAC4\",\n            marginTop: \"30px\",\n          }}\n        >\n          Monsters Beh\n        </h1>\n        <SearchBox\n          placeholder=\"Search Monsters...\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}